<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--mapper 即数据接口实现类-->


<!--mapper相当于Dao层接口类的实现类,namespace 放的是实现的接口的路径-->
<mapper namespace="com.marshio.dao.StudentDao">

    <!--parameterType="com.marshio.pojo.Student" 可以省略-->
    <insert id="insertStudent" >
        insert into db_student(stu_num,stu_name,stu_sex,stu_age)
        values(#{stuNum},#{stuName},#{stuSex},#{stuAge})
    </insert>

    <!-- useGeneratedKeys:设置添加操作是否需要回填生成的主键-->
    <!-- keyProperty:设置回填的主键值赋值到操作对象的哪个属性-->
    <insert id="insertStudent2" useGeneratedKeys="true" keyProperty="id">
        insert into db_student(stu_num,stu_name,stu_sex,stu_age)
        values(#{stuNum},#{stuName},#{stuSex},#{stuAge})
    </insert>


    <delete id="deleteStudent">
        delete from db_student where stu_num = #{stuNum}
    </delete>

    <update id="updateStudent">
        update db_student set
        stu_num = #{stuNum},
        stu_name = #{stuName},
        stu_sex = #{stuSex},
        stu_age = #{stuAge}
        where id = #{id}
    </update>

    <!--因为数据库与pojo中的字段名不一致，我们需要手动的建立映射，
        建立映射有两种方式
        一、取别名
        形式为 column_name_in_sql column_name_in_pojo
        二、设置map映射
        resultMap="studentMap"
        -->
    <resultMap id="studentMap" type="com.marshio.pojo.Student">
        <id column="id" property="id"/>
        <result column="stu_num" property="stuNum"/>
        <result column="stu_name" property="stuName"/>
        <result column="stu_sex" property="stuSex"/>
        <result column="stu_age" property="stuAge"/>
    </resultMap>

    <!--resultSets="" 指定当前操作返回的集合类型 -->
    <select id="listStudents" resultType="com.marshio.pojo.Student" resultSets="java.util.List">
        select id, stu_num stuNum, stu_name stuName, stu_sex stuSex, stu_age stuAge from db_student
    </select>

    <select id="listStudents2" resultMap="studentMap" resultSets="java.util.List">
        select id, stu_num, stu_name, stu_sex, stu_age from db_student
    </select>

    <select id="listStudentsByPage" resultMap="studentMap" resultSets="java.util.List">
        select id, stu_num, stu_name, stu_sex, stu_age from db_student limit #{arg0},#{arg1}
    </select>

    <select id="listStudentsByPage2" resultMap="studentMap" resultSets="java.util.List">
        select id, stu_num, stu_name, stu_sex, stu_age from db_student limit #{start},#{pageSize}
    </select>

    <select id="queryStudent" resultMap="studentMap" resultSets="java.util.List">
        select id, stu_num, stu_name, stu_sex, stu_age from db_student where stu_num = #{stuNum}
    </select>

    <select id="getCount" resultType="int">
        select count(*) from db_student
    </select>
</mapper>
